---
http_interactions:
- request:
    method: get
    uri: http://www.wegottickets.com/searchresults/all
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 18 Feb 2018 11:14:38 GMT
      Server:
      - Apache/2.2.15 (CentOS)
      X-Powered-By:
      - PHP/5.4.45
      Set-Cookie:
      - PHPSESSID=6oug5ntmhajral1iahdeggcq67; path=/
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      P3p:
      - CP='NOI DSP COR NID NOR'
      Connection:
      - close
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=ISO-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 18 Feb 2018 11:14:40 GMT
recorded_with: VCR 4.0.0
